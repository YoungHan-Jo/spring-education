package com.example.controller;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.domain.MemberVO;
import com.example.service.MemberService;
import com.example.util.JScript;

@Controller
@RequestMapping("/member/*")
public class MemberController {
	
	private MemberService memberService;
	
	public MemberController(MemberService memberService) {
		super();
		this.memberService = memberService;
	}

	@GetMapping("/login") //   /member/login
	public String loginForm() {
		
		System.out.println("loginForm 호출됨 ...");
		
		return "member/login";
	}
	
	@PostMapping("/login")
	public ResponseEntity<String> login(String id, String passwd,
			HttpSession session, boolean rememberMe) {
		
		// ====== 아이디 존재여부 체크 ======
		int count = memberService.getCountById(id);
		
		if(count == 0) { // DB에 아이디가 존재하지 않음
			HttpHeaders headers = new HttpHeaders();
			headers.add("Content-Type", "text/html; charset=UTF-8");
			
			String str = JScript.back("아이디가 존재하지 않습니다.");
			
			return new ResponseEntity<String>(str, headers, HttpStatus.OK);
		}
		// ====== 비밀번호 체크 ======
		MemberVO memberVO = memberService.getMemberById(id);
		String realPasswd = memberVO.getPasswd();
		
		if(passwd.equals(realPasswd) == false) { // 비밀번호 일치하지 않음
			HttpHeaders headers = new HttpHeaders();
			headers.add("Content-Type", "text/html; charset=UTF-8");
			
			String str = JScript.back("비밀번호가 틀렸습니다.");
			
			return new ResponseEntity<String>(str, headers, HttpStatus.OK);
		}
		
		
		// ==== 아이디 비밀번호 일치 시 로그인 ====
		// 세션 등록
		session.setAttribute("id", id);
		
		if(rememberMe == true) { // 로그인유지 체크 함
			//쿠키 등록하기
			Cookie cookie = new Cookie("id", id);
		}
		
		HttpHeaders headers = new HttpHeaders();
		headers.add("Content-Type", "text/html; charset=UTF-8");
		
		String str = JScript.href("로그인 완료", "/");
		
		return new ResponseEntity<String>(str, headers, HttpStatus.OK);
	}
	
	@GetMapping("/join") // /member/join 회원가입 화면으로 보내는 메소드
	public String joinForm() {
		
		return "member/join";
	}
	
	@PostMapping("/join") // /member/join 사용자가 입력한 값을 기반으로 회원가입 시키는 메소드
	public String join(MemberVO memberVO) {
		
		System.out.println("memberVO : " + memberVO);
		
		memberService.addMember(memberVO);
		
		System.out.println("회원가입 완료");
		
		return "member/login"; // 회원가입 완료 후 index 화면으로
	}
	
}
